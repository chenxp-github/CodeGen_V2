[Stack of Closure]
class ClosureList{
}


class Mutex{
}

[CodeSwitch copy_comp_print=false]
class TaskRunner{
	[noget,noset] ClosureList ClosureList;
	[noget,noset] Mutex mutex;
}

class FileBase{
	[noget,noset] void *user_data;
	char *split_chars;
}

class Mem:FileBase{
	[noset] int_ptr_t offset;
	int_ptr_t size;
	[noget,noset] int_ptr_t max_size;
	[noget,noset]bool_t  is_const;
	[noget,noset]bool_t is_self_alloc;
}

class MemFile:FileBase{
    [noget,noset] int_ptr_t size;
    [noget,noset] int_ptr_t pages;
    [noget,noset] int_ptr_t offset;
    [noget,noset] int_ptr_t max_pages;  
    [noget,noset] char *base;
    [noget,noset] int_ptr_t page_size;
    [noget,noset] uint32_t mod_n,shift_n;
}


class File:public FileBase{
    [noget,noset] int* fp;
    [noget,noset] char *file_buf;
    [noget,noset] int_ptr_t buf_size,init_buf_size;
    [noget,noset] fsize_t offset,size,buf_start;
}

class CombFile:public FileBase{
    [noget,noset] fsize_t Offset;
    [noget,noset] FileBase *AllFiles;
    [noget,noset] int FileNum;
    [noget,noset] int MaxFileNum;
}

class PartFile:public FileBase{
     [noget,noset] FileBase *i_host_file;
     [noget,noset] fsize_t offset,size;
     [noget,noset] fsize_t host_off;
     [noget,noset] fsize_t max_size;
}

class FileManager{
}

class WeakPtr{
	[noget,noset] void *raw_ptr;
	[noget,noset] int weak_ref_id;
}

class Epoll{
}


